{"ast":null,"code":"import AppStorage from \"./AppStorage\";\nimport Token from \"./Token\";\nimport axios from 'axios';\n\nclass User {\n  login(data, router) {\n    axios.post('/api/login', data).then(res => {\n      this.responseAfterLogin(res);\n      router.go({\n        name: 'Home-page'\n      });\n    }).catch(error => console.log(error.response.data));\n  }\n\n  register(data, router) {\n    axios.post('/api/register', data).then(res => {\n      this.responseAfterLogin(res);\n      router.push({\n        name: 'Home-page'\n      });\n      localStorage.removeItem('mobile');\n    }).catch(error => console.log(error.response.data));\n  }\n\n  responseAfterLogin(res) {\n    console.log(res);\n    const access_token = res.data.access_token;\n    const username = res.data.user.name;\n    const mobile = res.data.user.mobile;\n    const expaire = res.data.expires_in;\n\n    if (Token.isValid(access_token)) {\n      AppStorage.store(username, access_token, mobile, expaire);\n    }\n  }\n\n  hasToken() {\n    const storedToken = AppStorage.getToken();\n\n    if (storedToken) {\n      return Token.isValid(storedToken) ? true : this.logOut();\n    } else {\n      this.logOut();\n    }\n\n    return false;\n  }\n\n  logedIn() {\n    return this.hasToken();\n  }\n\n  logOut() {\n    AppStorage.clear();\n  }\n\n  name() {\n    if (this.logedIn()) {\n      return AppStorage.getUser();\n    }\n  }\n\n  id() {\n    if (this.logedIn()) {\n      const payload = Token.payload(AppStorage.getToken());\n      return payload.sub;\n    }\n  }\n\n  own(id) {\n    return this.id() == id;\n  }\n\n  admin() {\n    return this.id() == 1;\n  }\n\n}\n\nexport default User = new User();","map":{"version":3,"names":["AppStorage","Token","axios","User","login","data","router","post","then","res","responseAfterLogin","go","name","catch","error","console","log","response","register","push","localStorage","removeItem","access_token","username","user","mobile","expaire","expires_in","isValid","store","hasToken","storedToken","getToken","logOut","logedIn","clear","getUser","id","payload","sub","own","admin"],"sources":["F:/xampp/htdocs/softcode/softvue/src/middleware/User.js"],"sourcesContent":["import AppStorage from \"./AppStorage\";\r\nimport Token from \"./Token\";\r\nimport axios from 'axios';\r\n\r\nclass User{\r\n    login(data, router){\r\n        axios.post('/api/login',data)\r\n        .then(res => {\r\n            this.responseAfterLogin(res);\r\n            router.go({name:'Home-page'});\r\n        })\r\n        .catch(error => console.log(error.response.data))\r\n    }\r\n\r\n    register(data, router){\r\n        axios.post('/api/register',data)\r\n        .then(res => {\r\n            this.responseAfterLogin(res)\r\n            router.push({name:'Home-page'});\r\n            localStorage.removeItem('mobile');\r\n        })\r\n        .catch(error => console.log(error.response.data))\r\n    }\r\n\r\n    responseAfterLogin(res){\r\n        console.log(res);\r\n        const access_token = res.data.access_token;\r\n        const username = res.data.user.name;\r\n        const mobile = res.data.user.mobile;\r\n        const expaire = res.data.expires_in;\r\n\r\n        if(Token.isValid(access_token)){\r\n            AppStorage.store(username, access_token, mobile, expaire);\r\n        }\r\n    }\r\n\r\n\r\n    hasToken(){\r\n        const storedToken = AppStorage.getToken();\r\n        if(storedToken){\r\n          return Token.isValid(storedToken)? true : this.logOut();\r\n        }else{\r\n            this.logOut();\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    logedIn(){\r\n        return this.hasToken();\r\n    }\r\n\r\n    logOut(){\r\n        AppStorage.clear();\r\n    }\r\n\r\n    name(){\r\n        if(this.logedIn()){\r\n            return AppStorage.getUser();\r\n        }\r\n    }\r\n\r\n    id(){\r\n        if(this.logedIn()){\r\n            const payload = Token.payload(AppStorage.getToken());\r\n            return payload.sub;\r\n        }\r\n    }\r\n\r\n    own(id){\r\n        return this.id() == id;\r\n    }\r\n\r\n    admin(){\r\n        return this.id() == 1;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default User = new User();"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,CAAU;EACNC,KAAK,CAACC,IAAD,EAAOC,MAAP,EAAc;IACfJ,KAAK,CAACK,IAAN,CAAW,YAAX,EAAwBF,IAAxB,EACCG,IADD,CACMC,GAAG,IAAI;MACT,KAAKC,kBAAL,CAAwBD,GAAxB;MACAH,MAAM,CAACK,EAAP,CAAU;QAACC,IAAI,EAAC;MAAN,CAAV;IACH,CAJD,EAKCC,KALD,CAKOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeZ,IAA3B,CALhB;EAMH;;EAEDa,QAAQ,CAACb,IAAD,EAAOC,MAAP,EAAc;IAClBJ,KAAK,CAACK,IAAN,CAAW,eAAX,EAA2BF,IAA3B,EACCG,IADD,CACMC,GAAG,IAAI;MACT,KAAKC,kBAAL,CAAwBD,GAAxB;MACAH,MAAM,CAACa,IAAP,CAAY;QAACP,IAAI,EAAC;MAAN,CAAZ;MACAQ,YAAY,CAACC,UAAb,CAAwB,QAAxB;IACH,CALD,EAMCR,KAND,CAMOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeZ,IAA3B,CANhB;EAOH;;EAEDK,kBAAkB,CAACD,GAAD,EAAK;IACnBM,OAAO,CAACC,GAAR,CAAYP,GAAZ;IACA,MAAMa,YAAY,GAAGb,GAAG,CAACJ,IAAJ,CAASiB,YAA9B;IACA,MAAMC,QAAQ,GAAGd,GAAG,CAACJ,IAAJ,CAASmB,IAAT,CAAcZ,IAA/B;IACA,MAAMa,MAAM,GAAGhB,GAAG,CAACJ,IAAJ,CAASmB,IAAT,CAAcC,MAA7B;IACA,MAAMC,OAAO,GAAGjB,GAAG,CAACJ,IAAJ,CAASsB,UAAzB;;IAEA,IAAG1B,KAAK,CAAC2B,OAAN,CAAcN,YAAd,CAAH,EAA+B;MAC3BtB,UAAU,CAAC6B,KAAX,CAAiBN,QAAjB,EAA2BD,YAA3B,EAAyCG,MAAzC,EAAiDC,OAAjD;IACH;EACJ;;EAGDI,QAAQ,GAAE;IACN,MAAMC,WAAW,GAAG/B,UAAU,CAACgC,QAAX,EAApB;;IACA,IAAGD,WAAH,EAAe;MACb,OAAO9B,KAAK,CAAC2B,OAAN,CAAcG,WAAd,IAA4B,IAA5B,GAAmC,KAAKE,MAAL,EAA1C;IACD,CAFD,MAEK;MACD,KAAKA,MAAL;IAEH;;IACD,OAAO,KAAP;EACH;;EAGDC,OAAO,GAAE;IACL,OAAO,KAAKJ,QAAL,EAAP;EACH;;EAEDG,MAAM,GAAE;IACJjC,UAAU,CAACmC,KAAX;EACH;;EAEDvB,IAAI,GAAE;IACF,IAAG,KAAKsB,OAAL,EAAH,EAAkB;MACd,OAAOlC,UAAU,CAACoC,OAAX,EAAP;IACH;EACJ;;EAEDC,EAAE,GAAE;IACA,IAAG,KAAKH,OAAL,EAAH,EAAkB;MACd,MAAMI,OAAO,GAAGrC,KAAK,CAACqC,OAAN,CAActC,UAAU,CAACgC,QAAX,EAAd,CAAhB;MACA,OAAOM,OAAO,CAACC,GAAf;IACH;EACJ;;EAEDC,GAAG,CAACH,EAAD,EAAI;IACH,OAAO,KAAKA,EAAL,MAAaA,EAApB;EACH;;EAEDI,KAAK,GAAE;IACH,OAAO,KAAKJ,EAAL,MAAa,CAApB;EACH;;AAxEK;;AA8EV,eAAelC,IAAI,GAAG,IAAIA,IAAJ,EAAtB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-fda8b2ea\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"vue_checkbox\"\n};\nconst _hoisted_2 = [\"checked\", \"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    class: \"checkbox\",\n    type: \"checkbox\",\n    checked: $options.isChecked,\n    value: $props.value,\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.updateInput && $options.updateInput(...args))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _createElementVNode(\"label\", {\n    class: _normalizeClass(_ctx.classValue)\n  }, _toDisplayString($props.label), 3\n  /* TEXT, CLASS */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;uBAAXC,oBAGM,KAHN,cAGM,CAFDC,oBAAmG,OAAnG,EAAmG;IAA5FF,KAAK,EAAC,UAAsF;IAA3EG,IAAI,EAAC,UAAsE;IAA1DC,OAAO,EAAEC,kBAAiD;IAArCC,KAAK,EAAEC,YAA8B;IAAtBC,QAAM,yCAAEH,qDAAF;EAAgB,CAAnG;;EAAA,aAEC,EADFH,oBAA6C,OAA7C,EAA6C;IAApCF,KAAK,kBAAES,eAAF;EAA+B,CAA7C,mBAA8BF,aAA9B,EAAmC;EAAA;EAAnC,CACE,CAHN","names":["class","_createElementBlock","_createElementVNode","type","checked","$options","value","$props","onChange","_ctx"],"sourceRoot":"","sources":["F:\\xampp\\htdocs\\softcode\\softvue\\src\\layout\\base\\BaseCheckboxall.vue"],"sourcesContent":["<template>\r\n    <div class=\"vue_checkbox\">\r\n         <input class=\"checkbox\" type=\"checkbox\" :checked=\"isChecked\" :value=\"value\" @change=\"updateInput\"/>\r\n        <label  :class=\"classValue\">{{label}}</label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  model: {\r\n    prop: 'modelValue',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    \"value\": { type: String },\r\n    \"modelValue\": { default: \"\" },\r\n    \"label\": { type: String, required: true},\r\n    \"trueValue\": { default: true },\r\n    \"falseValue\": { default: false }\r\n  },\r\n  computed: {\r\n    isChecked() {\r\n      if (this.modelValue instanceof Array) {\r\n        return this.modelValue.includes(this.value)\r\n      }\r\n      // Note that `true-value` and `false-value` are camelCase in the JS\r\n      return this.modelValue === this.trueValue\r\n    }\r\n  },\r\n  methods: {\r\n    updateInput(event) {\r\n      let isChecked = event.target.checked\r\n      if (this.modelValue instanceof Array) {\r\n        let newValue = [...this.modelValue]\r\n        if (isChecked) {\r\n          newValue.push(this.value)\r\n        } else {\r\n          newValue.splice(newValue.indexOf(this.value), 1)\r\n        }\r\n        this.$emit('change', newValue)\r\n      } else {\r\n        this.$emit('change', isChecked ? this.trueValue : this.falseValue)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  .vue_checkbox {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .vue_checkbox input {\r\n    padding: 0;\r\n    height: initial;\r\n    width: initial;\r\n    margin-bottom: 0;\r\n    // display: none;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .vue_checkbox label {\r\n    position: relative;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .vue_checkbox label:before {\r\n    content:'';\r\n    -webkit-appearance: none;\r\n    background-color: transparent;\r\n    border: 1.5px solid #0079bf;\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05), inset 0px -15px 10px -12px rgba(0, 0, 0, 0.05);\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    cursor: pointer;\r\n    margin-right: 5px;\r\n    border-radius: 2px;\r\n  }\r\n  label.errors:before {\r\n      border: 1px solid red;\r\n    }\r\n\r\n  .vue_checkbox input:checked + label:after {\r\n    content: '\\2713';\r\n    display: block;\r\n    position: absolute;\r\n    top: -9px;\r\n    left: 0;\r\n    font-size: 19px;\r\n    color:  #0079bf;\r\n\r\n  }\r\n\r\n\r\n  .vue_checkbox .label:before {\r\n    content:'';\r\n    -webkit-appearance: none;\r\n    background-color: transparent;\r\n    width: 10px;\r\n    height: 10px;\r\n    background: white;\r\n    \r\n    border-radius: 50%;\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05), inset 0px -15px 10px -12px rgba(0, 0, 0, 0.05);\r\n    padding: 5px;\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    cursor: pointer;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  .vue_checkbox input:checked + .label:after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    top: 9px;\r\n    left: 4px;\r\n    width: 5px;\r\n    height: 5px;\r\n    background: #594c4c;\r\n    border-radius: 50%;\r\n    color:  #0079bf;\r\n\r\n  }\r\n\r\n\r\n\r\n/* Hide the browser's default checkbox */\r\n.vue_checkbox {\r\n  position: relative;\r\n}\r\nlabel {\r\n  pointer-events: none;\r\n  border-width: 0;\r\n  border: none;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 4px;\r\n}\r\nlabel::before {\r\n  width: 12px;\r\n  height: 12px;\r\n  top: 2px;\r\n  border-radius: 2px;\r\n}\r\ninput {\r\n  position: absolute;\r\n  margin-top: 5px;\r\n}\r\ninput:checked {\r\n  pointer-events: all;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, mergeProps as _mergeProps, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"visible\", \"before-close\"];\nconst _hoisted_2 = {\n  slot: \"footer\",\n  class: \"dialog-footer\"\n};\nconst _hoisted_3 = [\"loading\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"dialog\", _mergeProps({\n    class: \"confirm-modal\",\n    center: \"\",\n    \"modal-append-to-body\": false,\n    \"append-to-body\": true,\n    visible: $options.isVisible,\n    onClose: _cache[2] || (_cache[2] = (...args) => $options.close && $options.close(...args)),\n    \"before-close\": $options.beforeClose\n  }, _ctx.$attrs), [_renderSlot(_ctx.$slots, \"default\", {}, () => [_createElementVNode(\"span\", null, _toDisplayString($props.message), 1\n  /* TEXT */\n  )]), _createElementVNode(\"span\", _hoisted_2, [_createElementVNode(\"button\", {\n    id: \"save-button\",\n    type: \"success\",\n    loading: $props.loading,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.confirm && $options.confirm(...args))\n  }, _toDisplayString($props.confirmLabel), 9\n  /* TEXT, PROPS */\n  , _hoisted_3), _createElementVNode(\"button\", {\n    id: \"close-button\",\n    type: \"danger\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.close && $options.close(...args))\n  }, _toDisplayString($props.cancelLabel), 1\n  /* TEXT */\n  )])], 16\n  /* FULL_PROPS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;EAYUA,IAAI,EAAC;EAASC,KAAK,EAAC;;;;uBAX5BC,oBAmBS,QAnBT,cAmBS;IAnBDD,KAAK,EAAC,eAmBL;IAlBEE,MAAM,EAAN,EAkBF;IAjBG,wBAAsB,KAiBzB;IAhBG,kBAAgB,IAgBnB;IAfGC,OAAO,EAAEC,kBAeZ;IAdGC,OAAK,yCAAED,yCAAF,CAcR;IAbG,gBAAcA;EAajB,CAnBT,EAOmBE,WAPnB,GAOyB,CACvBC,YAEOD,WAFP,EAEO,SAFP,EAEO,EAFP,QAEO,CADLE,oBAA0B,MAA1B,EAA0B,IAA1B,EAA0BC,iBAAjBC,cAAiB,CAA1B,EAAgB;EAAA;EAAhB,CACK,CAFP,CADuB,EAIvBF,oBAOK,MAPL,cAOK,CANFA,oBAES,QAFT,EAES;IAFDG,EAAE,EAAC,aAEF;IAFgBC,IAAI,EAAC,SAErB;IAFgCC,OAAO,EAAEH,cAEzC;IAFmDI,OAAK,yCAASV,6CAAT;EAExD,CAFT,mBACKM,oBADL,EACiB;EAAA;EADjB,EACiBK,UADjB,CAME,EAHHP,oBAES,QAFT,EAES;IAFDG,EAAE,EAAC,cAEF;IAFiBC,IAAI,EAAC,QAEtB;IAFgCE,OAAK,yCAASV,yCAAT;EAErC,CAFT,mBACKM,mBADL,EACgB;EAAA;EADhB,CAGG,CAPL,CAJuB,CAPzB;;EAAA","names":["slot","class","_createElementBlock","center","visible","$options","onClose","_ctx","_renderSlot","_createElementVNode","_toDisplayString","$props","id","type","loading","onClick","_hoisted_3"],"sourceRoot":"","sources":["F:\\xampp\\htdocs\\softcode\\softvue\\src\\layout\\base\\ConfirmModal.vue"],"sourcesContent":["<template>\r\n  <dialog class=\"confirm-modal\"\r\n             center\r\n             :modal-append-to-body=\"false\"\r\n             :append-to-body=\"true\"\r\n             :visible=\"isVisible\"\r\n             @close=\"close\"\r\n             :before-close=\"beforeClose\"\r\n             v-bind=\"$attrs\">\r\n    <slot>\r\n      <span>{{ message }}</span>\r\n    </slot>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n       <button id=\"save-button\" type=\"success\" :loading=\"loading\" @click.native=\"confirm\">\r\n         {{ confirmLabel }}\r\n       </button>\r\n      <button id=\"close-button\" type=\"danger\" @click.native=\"close\">\r\n        {{ cancelLabel }}\r\n      </button>\r\n  </span>\r\n  </dialog>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Confirm\",\r\n  props: {\r\n    syncViaProps: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    visible: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    message: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    cancelLabel: {\r\n      type: String,\r\n      default: \"Cancel\"\r\n    },\r\n    confirmLabel: {\r\n      type: String,\r\n      default: \"Yes\"\r\n    },\r\n    loading: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    closeOnConfirm: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      promise: undefined,\r\n      beforeConfirm: () => {},\r\n      beforeCancel: () => {},\r\n      internalVisible: false,\r\n      resolvePromise: undefined,\r\n      rejectPromise: undefined\r\n    };\r\n  },\r\n  computed: {\r\n    isVisible() {\r\n      return this.visible || this.internalVisible;\r\n    }\r\n  },\r\n  methods: {\r\n    beforeClose(done) {\r\n      done();\r\n      this.updateVisible(false);\r\n    },\r\n    async close() {\r\n      let done = () => {\r\n        this.updateVisible(false);\r\n        this.rejectPromise();\r\n      };\r\n\r\n      if (this.isVisible && this.beforeCancel) {\r\n        await this.beforeCancel(done);\r\n      }\r\n      done();\r\n    },\r\n    updateVisible(value) {\r\n      if (this.syncViaProps) {\r\n        this.$emit(\"update:visible\", value);\r\n      } else {\r\n        this.internalVisible = value;\r\n      }\r\n    },\r\n    async confirm() {\r\n      let done = () => {\r\n        this.updateVisible(false);\r\n        this.resolvePromise();\r\n      };\r\n      if (this.beforeConfirm) {\r\n        await this.beforeConfirm(done);\r\n      }\r\n      if (this.closeOnConfirm) {\r\n        done();\r\n      }\r\n    },\r\n    show() {\r\n      this.updateVisible(true);\r\n      return new Promise((resolve, reject) => {\r\n        this.resolvePromise = resolve;\r\n        this.rejectPromise = reject;\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}
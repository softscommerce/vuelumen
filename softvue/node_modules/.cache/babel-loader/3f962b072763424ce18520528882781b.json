{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6aea7df4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"vue_checkbox\"\n};\nconst _hoisted_2 = [\"type\", \"value\", \"name\", \"id\", \"checked\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: $props.type,\n    value: $props.value,\n    name: $props.name,\n    id: $props.id,\n    checked: $props.checked,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _createElementVNode(\"label\", {\n    class: _normalizeClass($props.classValue)\n  }, _toDisplayString($props.label), 3\n  /* TEXT, CLASS */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;uBAAXC,oBAKM,KALN,cAKM,CAJFC,oBAEG,OAFH,EAEG;IAFKC,IAAI,EAAEC,WAEX;IAFkBC,KAAK,EAAED,YAEzB;IAFiCE,IAAI,EAAEF,WAEvC;IAF8CG,EAAE,EAAEH,SAElD;IAFyDI,OAAO,EAAEJ,cAElE;IADCK,OAAK,sCAAEC,WAAK,mBAAL,EAA2BC,MAAM,CAACC,MAAP,CAAcP,KAAzC,CAAF;EACN,CAFH;;EAAA,aAIE,EADFH,oBAA6C,OAA7C,EAA6C;IAApCF,KAAK,kBAAEI,iBAAF;EAA+B,CAA7C,mBAA8BA,aAA9B,EAAmC;EAAA;EAAnC,CACE,CALN","names":["class","_createElementBlock","_createElementVNode","type","$props","value","name","id","checked","onInput","_ctx","$event","target"],"sourceRoot":"","sources":["F:\\xampp\\htdocs\\softcode\\softvue\\src\\layout\\base\\BaseCheckbox.vue"],"sourcesContent":["<template>\r\n    <div class=\"vue_checkbox\">\r\n        <input :type=\"type\" :value=\"value\" :name=\"name\" :id=\"id\"   :checked=\"checked\"\r\n           @input=\"$emit('update:modelValue', $event.target.value)\"\r\n          >\r\n        <label  :class=\"classValue\">{{label}}</label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default{\r\n\r\n      props: {\r\n\r\n        label: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n\r\n         name: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n\r\n         type: {\r\n            type: String,\r\n            default:'checkbox',\r\n        },\r\n      \r\n         id: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n\r\n         value: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n         classValue: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n         checked: {\r\n        type: Boolean,\r\n        default:false,\r\n      },\r\n\r\n        \r\n    }\r\n\r\n\r\n  }  \r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .vue_checkbox {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .vue_checkbox input {\r\n    padding: 0;\r\n    height: initial;\r\n    width: initial;\r\n    margin-bottom: 0;\r\n    // display: none;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .vue_checkbox label {\r\n    position: relative;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .vue_checkbox label:before {\r\n    content:'';\r\n    -webkit-appearance: none;\r\n    background-color: transparent;\r\n    border: 1.5px solid #0079bf;\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05), inset 0px -15px 10px -12px rgba(0, 0, 0, 0.05);\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    cursor: pointer;\r\n    margin-right: 5px;\r\n    border-radius: 2px;\r\n  }\r\n  label.errors:before {\r\n      border: 1px solid red;\r\n    }\r\n\r\n  .vue_checkbox input:checked + label:after {\r\n    content: '\\2713';\r\n    display: block;\r\n    position: absolute;\r\n    top: -9px;\r\n    left: 0;\r\n    font-size: 19px;\r\n    color:  #0079bf;\r\n\r\n  }\r\n\r\n\r\n  .vue_checkbox .label:before {\r\n    content:'';\r\n    -webkit-appearance: none;\r\n    background-color: transparent;\r\n    width: 10px;\r\n    height: 10px;\r\n    background: white;\r\n    \r\n    border-radius: 50%;\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05), inset 0px -15px 10px -12px rgba(0, 0, 0, 0.05);\r\n    padding: 5px;\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    cursor: pointer;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  .vue_checkbox input:checked + .label:after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    top: 9px;\r\n    left: 4px;\r\n    width: 5px;\r\n    height: 5px;\r\n    background: #594c4c;\r\n    border-radius: 50%;\r\n    color:  #0079bf;\r\n\r\n  }\r\n\r\n\r\n\r\n/* Hide the browser's default checkbox */\r\n.vue_checkbox {\r\n  position: relative;\r\n}\r\nlabel {\r\n  pointer-events: none;\r\n  border-width: 0;\r\n  border: none;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 4px;\r\n}\r\nlabel::before {\r\n  width: 12px;\r\n  height: 12px;\r\n  top: 2px;\r\n  border-radius: 2px;\r\n}\r\ninput {\r\n  position: absolute;\r\n  margin-top: 5px;\r\n}\r\ninput:checked {\r\n  pointer-events: all;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}
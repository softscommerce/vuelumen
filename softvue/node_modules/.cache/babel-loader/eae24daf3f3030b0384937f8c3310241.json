{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d9bdd202\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<section id=\\\"header-container\\\" data-v-d9bdd202><select data-v-d9bdd202><option disabled data-v-d9bdd202>What&#39;s your favorite movie ?</option><option value=\\\"choix-2\\\" data-v-d9bdd202>Inception</option><option value=\\\"choix-3\\\" data-v-d9bdd202>Godzilla</option><option value=\\\"choix-4\\\" data-v-d9bdd202>Back to the future</option><option value=\\\"choix-5\\\" data-v-d9bdd202>Shutter Island</option></select></section>\", 1);\n\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";;;;;;oBAEIA;;uBADAC,oBAUM,KAVN,EAUM,IAVN,EAUMC,UAVN","names":["_hoisted_1","_createElementBlock","_hoisted_2"],"sourceRoot":"","sources":["F:\\softvue\\src\\layout\\base\\BaseSelectn.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <section id=\"header-container\">\r\n        <select>\r\n            <option disabled>What's your favorite movie ?</option>\r\n            <option value=\"choix-2\">Inception</option>\r\n            <option value=\"choix-3\">Godzilla</option>\r\n            <option value=\"choix-4\">Back to the future</option>\r\n            <option value=\"choix-5\">Shutter Island</option>\r\n        </select>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default{\r\n       mounted(){\r\n  var CuteSelect = CuteSelect || {};\r\n\r\n var  FIRSTLOAD = true;\r\n  var SOMETHINGOPEN = false;\r\n\r\n  CuteSelect.tools = {\r\n    canRun: function() {\r\n      var myNav = navigator.userAgent.toLowerCase();\r\n      var browser = (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : false;\r\n      if(browser) {\r\n        return (browser > 8) ? true : false;\r\n      } else { return true; }\r\n    },\r\n    uniqid: function() {\r\n      var n= Math.floor(Math.random()*11);\r\n      var k = Math.floor(Math.random()* 1000000);\r\n      var m = String.fromCharCode(n)+k;\r\n      return m;\r\n    },\r\n    hideEverything: function() {\r\n      if(SOMETHINGOPEN) {\r\n        SOMETHINGOPEN = false;\r\n        targetThis = false;\r\n        var cells = document.getElementsByTagName('div');\r\n        for (var i = 0; i < cells.length; i++) {\r\n          if(cells[i].hasAttribute('data-cuteselect-options')) { \r\n            var parent = cells[i].parentNode;\r\n            cells[i].style.opacity = '0';\r\n            cells[i].style.display = 'none';\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getStyle: function() {\r\n      var css = '';\r\n      var stylesheets = document.styleSheets;\r\n      var css = '';\r\n      for(var s = 0; s < stylesheets.length; s++) {\r\n        var classes = stylesheets[s].rules || stylesheets[s].cssRules;\r\n        for (var x = 0; x < classes.length; x++) {\r\n          if(classes[x].selectorText != undefined) {\r\n            var selectPosition = classes[x].selectorText.indexOf('select');\r\n            var optionPosition = classes[x].selectorText.indexOf('option');\r\n            var selectChar = classes[x].selectorText.charAt(selectPosition - 1);\r\n            var optionChar = classes[x].selectorText.charAt(optionPosition - 1);\r\n            if(selectPosition >= 0 && optionPosition >= 0 && (selectChar == '' || selectChar == '}' || selectChar == ' ') && (optionChar == '' || optionChar == '}' || optionChar == ' ')) {\r\n             var  text = (classes[x].cssText) ? classes[x].cssText : classes[x].style.cssText;\r\n              css += text.replace(/\\boption\\b/g, '[data-cuteselect-value]').replace(/\\bselect\\b/g, '[data-cuteselect-item]');\r\n              continue;\r\n            }\r\n            if(selectPosition >= 0) {\r\n              var character = classes[x].selectorText.charAt(selectPosition - 1);\r\n              if(character == '' || character == '}' || character == ' ') {\r\n               var  text = (classes[x].cssText) ? classes[x].cssText : classes[x].style.cssText;\r\n                css += text.replace(/\\bselect\\b/g, '[data-cuteselect-item]');\r\n              }\r\n            }\r\n            if(optionPosition >= 0) {\r\n              var character = classes[x].selectorText.charAt(optionPosition - 1);\r\n              if(character == '' || character == '}' || character == ' ') {\r\n               var  text = (classes[x].cssText) ? classes[x].cssText : classes[x].style.cssText;\r\n                css += text.replace(/\\boption\\b/g, '[data-cuteselect-value]');\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return css;\r\n    },\r\n    createSelect: function(item) {\r\n\r\n      // Create custom select\r\n      var node = document.createElement(\"div\");\r\n      if(item.hasAttribute('id')) { // Catch ID\r\n        node.setAttribute('id', item.getAttribute('id')); \r\n        item.removeAttribute('id');\r\n      }\r\n      if(item.hasAttribute('class')) { // Catch Class\r\n        node.setAttribute('class', item.getAttribute('class')); \r\n        item.removeAttribute('class');\r\n      }\r\n\r\n      // Hide select\r\n      item.style.display = 'none';\r\n\r\n      // Get Default value (caption)\r\n      var caption = null;\r\n      var cells = item.getElementsByTagName('option'); \r\n      for (var i = 0; i < cells.length; i++) { \r\n        caption = cells[0].innerHTML;\r\n        if(cells[i].hasAttribute('selected')) {\r\n          caption = cells[i].innerHTML;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Get select options\r\n      var options = '<div data-cuteselect-title>' + caption + '</div><div data-cuteselect-options><div data-cuteselect-options-container>';\r\n      var cells = item.getElementsByTagName('option'); \r\n      for (var i = 0; i < cells.length; i++) { \r\n        if(cells[i].hasAttribute('disabled')) { continue; }\r\n        if(cells[i].hasAttribute('class')) { var optionStyle = ' class=\"' + cells[i].getAttribute('class') + '\"'; } else { var optionStyle = ''; }\r\n        if(cells[i].hasAttribute('id')) { var optionId = ' id=\"' + cells[i].getAttribute('id') + '\"'; } else { var optionId = ''; }\r\n        if(cells[i].hasAttribute('selected')) { options += '<div data-cuteselect-value=\"' + cells[i].value + '\" data-cuteselect-selected=\"true\"' + optionStyle + optionId + '>' + cells[i].innerHTML + '</div>'; }\r\n        else { options += '<div data-cuteselect-value=\"' + cells[i].value + '\"' + optionStyle + optionId + '>' + cells[i].innerHTML + '</div>'; }\r\n      }\r\n      options += '</div></div>';\r\n\r\n      // New select customization\r\n      node.innerHTML = caption;\r\n      node.setAttribute('data-cuteselect-item', CuteSelect.tools.uniqid());\r\n      node.innerHTML = options; // Display options\r\n      item.setAttribute('data-cuteselect-target', node.getAttribute('data-cuteselect-item'));\r\n      item.parentNode.insertBefore(node, item.nextSibling);\r\n\r\n      // Hide all options\r\n      CuteSelect.tools.hideEverything();\r\n    },\r\n    show: function(item) {\r\n      if(item.parentNode.hasAttribute('data-cuteselect-item')) { var source = item.parentNode.getAttribute('data-cuteselect-item'); }\r\n      else { var source = item.getAttribute('data-cuteselect-item'); }\r\n      var cells = document.getElementsByTagName('select');\r\n      if(item.hasAttribute('data-cuteselect-title')) { \r\n        item = item.parentNode;\r\n        var cells = item.getElementsByTagName('div');  \r\n      }\r\n      else { var cells = item.getElementsByTagName('div');  }\r\n      for (var i = 0; i < cells.length; i++) {\r\n        if(cells[i].hasAttribute('data-cuteselect-options')) {\r\n          targetItem = cells[i];\r\n          cells[i].style.display = 'block';\r\n          setTimeout(function() { targetItem.style.opacity = '1'; }, 10);\r\n          cells[i].style.position = 'absolute';\r\n          cells[i].style.left = item.offsetLeft + 'px';\r\n          cells[i].style.top = (item.offsetTop + item.offsetHeight) + 'px';\r\n        }\r\n      }\r\n\r\n      item.focus();\r\n\r\n      SOMETHINGOPEN = item.getAttribute('data-cuteselect-item');\r\n    },\r\n    selectOption: function(item) {\r\n      var label = item.innerHTML;\r\n      var value = item.getAttribute('data-cuteselect-value');\r\n      var parent = item.parentNode.parentNode.parentNode;\r\n      var target = parent.getAttribute('data-cuteselect-item');\r\n      var cells = parent.getElementsByTagName('div');\r\n      for (var i = 0; i < cells.length; i++) {\r\n        if(cells[i].hasAttribute('data-cuteselect-title')) { cells[i].innerHTML = label; }\r\n      }\r\n\r\n      // Real select\r\n      var cells = document.getElementsByTagName('select');\r\n      for (var i = 0; i < cells.length; i++) {\r\n        var source = cells[i].getAttribute('data-cuteselect-target');\r\n        if(source == target) { cells[i].value = value; }\r\n      }\r\n      CuteSelect.tools.hideEverything();\r\n    },\r\n    writeStyles: function() {\r\n      toWrite = '<style type=\"text/css\">' + CuteSelect.tools.getStyle() + ' [data-cuteselect-options] { opacity: 0; display: none; }</style>';\r\n      document.write(toWrite);\r\n    }\r\n  };\r\n\r\n  CuteSelect.event = {\r\n    parse: function() {\r\n      var cells = document.getElementsByTagName('select'); \r\n      for (var i = 0; i < cells.length; i++) { CuteSelect.tools.createSelect(cells[i]); }\r\n    },\r\n    listen: function() {\r\n      document.onkeydown = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode == 27) { CuteSelect.tools.hideEverything(); }\r\n      };\r\n      document.onclick = function(event) {\r\n        FIRSTLOAD = false; \r\n        if((!event.target.getAttribute('data-cuteselect-item') && !event.target.getAttribute('data-cuteselect-value') && !event.target.hasAttribute('data-cuteselect-title')) || ((event.target.hasAttribute('data-cuteselect-item') || event.target.hasAttribute('data-cuteselect-title')) && SOMETHINGOPEN)) { \r\n          CuteSelect.tools.hideEverything();\r\n          return; \r\n        }\r\n        var action = event.target;\r\n        if(event.target.getAttribute('data-cuteselect-value')) {\r\n          CuteSelect.tools.selectOption(action);\r\n          CuteSelect.tools.hideEverything();\r\n        } \r\n        else { CuteSelect.tools.show(action); }\r\n        return false;\r\n      }\r\n    },\r\n    manage: function() {\r\n      if(CuteSelect.tools.canRun()) { // IE Compatibility\r\n        CuteSelect.event.parse();\r\n        CuteSelect.event.listen();\r\n        CuteSelect.tools.writeStyles();\r\n      }\r\n    }\r\n  };\r\n\r\n  CuteSelect.event.manage();\r\n\r\n       }\r\n        }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#header-container {\r\n  display: block;\r\n  position: absolute;\r\n  width: 320px;\r\n  height: 55px;\r\n  left: 50%;\r\n  top: 50%;\r\n  margin-left: -160px;\r\n  margin-top: -87px;\r\n}\r\n\r\n/* Select style here */\r\n\r\nselect {\r\n  margin: 0 auto;\r\n  color: #EC6F66;\r\n  width: 310px;\r\n  padding: 15px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n  background: url(http://sharpik.com/wip/cuteselect/arrow.png) 295px 12px no-repeat white;\r\n}\r\n\r\nselect:hover {\r\n  background-color: transparent;\r\n  color: white;\r\n  padding: 15px 5px 15px 25px;\r\n}\r\n\r\nselect option {\r\n  background-color: white;\r\n  color: gray;\r\n  width: 310px;\r\n  padding: 10px 15px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\nselect option:hover {\r\n  padding-left: 25px;\r\n  width: 270px;\r\n  color: #EC6F66;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
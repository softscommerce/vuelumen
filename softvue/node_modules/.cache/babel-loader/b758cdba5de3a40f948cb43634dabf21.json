{"ast":null,"code":"import { reactive } from 'vue';\nconst errorMsg = reactive([]);\nconst Validations = reactive([]);\n\nValidations['text'] = (value, message, message1, limit = 0) => {\n  if (value != '') {\n    if (value.length > limit) {\n      errorMsg['product_name'] = '';\n    } else {\n      errorMsg['product_name'] = message1;\n      die();\n      return false;\n    }\n  } else {\n    die();\n    errorMsg['product_name'] = message;\n    return false;\n  }\n};\n\nValidations['description'] = (value, message, message1, limit = 0) => {\n  if (value != '') {\n    if (value.length > limit) {\n      errorMsg['product_description'] = '';\n    } else {\n      errorMsg['product_description'] = message1;\n      return false;\n    }\n  } else {\n    errorMsg['product_description'] = message;\n    return false;\n  }\n};\n\nValidations['unit'] = (value, message) => {\n  if (value != '') {\n    errorMsg['unit'] = '';\n  } else {\n    errorMsg['unit'] = message;\n    return false;\n  }\n};\n\nValidations['rprice'] = (value, message) => {\n  if (value != '') {\n    errorMsg['rprices'] = '';\n  } else {\n    errorMsg['rprices'] = message;\n    return false;\n  }\n};\n\nValidations['sprice'] = (value, message) => {\n  if (value != '') {\n    errorMsg['sprices'] = '';\n  } else {\n    errorMsg['sprices'] = message;\n    return false;\n  }\n};\n\nValidations['category'] = value => {\n  if (value != 0) {\n    errorMsg['category'] = '';\n  } else {\n    errorMsg['category'] = 'Category is Requried';\n    return false;\n  }\n};\n\nValidations['brand'] = value => {\n  if (value != 0) {\n    errorMsg['brand'] = '';\n  } else {\n    errorMsg['brand'] = 'Brand is Requried';\n    return false;\n  }\n};\n\nValidations['email'] = (value, message) => {\n  if (value != '') {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n      errorMsg['email'] = '';\n    } else {\n      errorMsg['email'] = 'Invalid Email Address';\n      return false;\n    }\n  } else {\n    errorMsg['email'] = message;\n    return false;\n  }\n};\n\nValidations['checkbox'] = (value, message) => {\n  if (value != false) {} else {\n    errorMsg['checkbox'] = message;\n    return false;\n  }\n};\n\nValidations['phone'] = (value, message, message1, limit = 11) => {\n  if (value != false) {\n    if (value.length >= limit) {\n      if (/^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/.test(value)) {\n        errorMsg['phone'] = '';\n      } else {\n        errorMsg['phone'] = 'Phone Number is invalid';\n        return false;\n      }\n    } else {\n      errorMsg['phone'] = message1;\n      return false;\n    }\n  } else {\n    errorMsg['phone'] = message;\n    return false;\n  }\n};\n\nValidations['password'] = (value, message, message1, message2, limit = 4) => {\n  if (value != false) {\n    let difference = limit - value.length;\n\n    if (value.length < limit) {\n      errorMsg['password'] = 'Must be ' + limit + ' characters! ' + difference + ' characters left';\n    } else {\n      if (value.length < 4 && value.length > 8) {\n        errorMsg['password'] = message1;\n      } else {\n        errorMsg['password'] = message2;\n      }\n    }\n  } else {\n    errorMsg['phone'] = message;\n    return false;\n  }\n};\n\nconst Validation = () => {\n  return {\n    Validations,\n    errorMsg\n  };\n};\n\nexport default Validation;","map":{"version":3,"names":["reactive","errorMsg","Validations","value","message","message1","limit","length","die","test","message2","difference","Validation"],"sources":["F:/xampp/htdocs/softcode/softvue/src/Helpers/helpers.js"],"sourcesContent":["import {reactive} from 'vue';\r\nconst errorMsg = reactive([])\r\nconst Validations = reactive([]);\r\n\r\n    \r\n       Validations['text'] = (value, message, message1, limit = 0,)=> {\r\n        if(value != ''){\r\n          if(value.length > limit){\r\n            errorMsg['product_name'] = '';\r\n          }else{\r\n            errorMsg['product_name'] =message1;\r\n            die();\r\n            return false;\r\n          }\r\n        }else{\r\n            die();\r\n             errorMsg['product_name'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\n    Validations['description'] = (value, message, message1, limit = 0,)=> {\r\n        if(value != ''){\r\n          if(value.length > limit){\r\n            errorMsg['product_description'] = '';\r\n          }else{\r\n            errorMsg['product_description'] =message1;\r\n            return false;\r\n          }\r\n        }else{\r\n            \r\n             errorMsg['product_description'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\n   Validations['unit'] = (value, message)=> {\r\n        if(value != ''){\r\n            errorMsg['unit'] = ''\r\n        }else{\r\n            \r\n             errorMsg['unit'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\n    Validations['rprice'] = (value, message)=> {\r\n        if(value != ''){\r\n            errorMsg['rprices'] = ''\r\n        }else{\r\n            \r\n             errorMsg['rprices'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\n    Validations['sprice'] = (value, message)=> {\r\n        if(value != ''){\r\n            errorMsg['sprices'] = ''\r\n        }else{\r\n            \r\n             errorMsg['sprices'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\n    Validations['category'] = (value)=> {\r\n        if(value != 0){\r\n            errorMsg['category'] = ''\r\n        }else{\r\n            \r\n             errorMsg['category'] = 'Category is Requried';\r\n             return false;\r\n        }\r\n    }\r\n\r\n    Validations['brand'] = (value)=> {\r\n        if(value != 0){\r\n            errorMsg['brand'] = ''\r\n        }else{\r\n            \r\n             errorMsg['brand'] = 'Brand is Requried';\r\n             return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    Validations['email'] = (value, message) =>{\r\n        if(value != ''){\r\n         if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value))\r\n            {\r\n                    errorMsg['email'] = '';\r\n            } else{\r\n                    errorMsg['email']  = 'Invalid Email Address';\r\n                    return false;\r\n            } \r\n              \r\n        }else{\r\n            \r\n             errorMsg['email'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\n\r\n    Validations['checkbox'] =(value, message)=>{\r\n        if(value != false){\r\n            \r\n              \r\n        }else{\r\n            \r\n             errorMsg['checkbox'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\n    Validations['phone'] = (value, message, message1, limit=11) =>{\r\n        if(value != false){\r\n            if(value.length >= limit){\r\n                if(/^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/.test(value)){\r\n                     errorMsg['phone'] = '';\r\n                }else{\r\n                     errorMsg['phone'] = 'Phone Number is invalid';\r\n                     return false;\r\n                }\r\n               \r\n            }else{\r\n                 errorMsg['phone'] = message1;\r\n                 return false;\r\n            }\r\n              \r\n        }else{\r\n            \r\n             errorMsg['phone'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\n    Validations['password'] = (value, message, message1, message2, limit=4) =>{\r\n        if(value != false){\r\n            let difference = limit - value.length;\r\n                if (value.length<limit) {\r\n                    errorMsg['password'] = 'Must be '+limit+' characters! '+ difference + ' characters left' ;\r\n                } else {\r\n                    if(value.length<4 && value.length> 8){\r\n                        errorMsg['password'] = message1 ;\r\n                    }else{\r\n                         errorMsg['password'] = message2 ;\r\n                    }\r\n                }\r\n              \r\n        }else{\r\n            \r\n             errorMsg['phone'] = message;\r\n             return false;\r\n        }\r\n    }\r\n\r\nconst Validation = () =>{\r\n    return { Validations,  errorMsg}\r\n}\r\n\r\nexport default Validation;"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,KAAvB;AACA,MAAMC,QAAQ,GAAGD,QAAQ,CAAC,EAAD,CAAzB;AACA,MAAME,WAAW,GAAGF,QAAQ,CAAC,EAAD,CAA5B;;AAGOE,WAAW,CAAC,MAAD,CAAX,GAAsB,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,KAAK,GAAG,CAAnC,KAAyC;EAC9D,IAAGH,KAAK,IAAI,EAAZ,EAAe;IACb,IAAGA,KAAK,CAACI,MAAN,GAAeD,KAAlB,EAAwB;MACtBL,QAAQ,CAAC,cAAD,CAAR,GAA2B,EAA3B;IACD,CAFD,MAEK;MACHA,QAAQ,CAAC,cAAD,CAAR,GAA0BI,QAA1B;MACAG,GAAG;MACH,OAAO,KAAP;IACD;EACF,CARD,MAQK;IACDA,GAAG;IACFP,QAAQ,CAAC,cAAD,CAAR,GAA2BG,OAA3B;IACA,OAAO,KAAP;EACJ;AACJ,CAdE;;AAgBHF,WAAW,CAAC,aAAD,CAAX,GAA6B,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,KAAK,GAAG,CAAnC,KAAyC;EAClE,IAAGH,KAAK,IAAI,EAAZ,EAAe;IACb,IAAGA,KAAK,CAACI,MAAN,GAAeD,KAAlB,EAAwB;MACtBL,QAAQ,CAAC,qBAAD,CAAR,GAAkC,EAAlC;IACD,CAFD,MAEK;MACHA,QAAQ,CAAC,qBAAD,CAAR,GAAiCI,QAAjC;MACA,OAAO,KAAP;IACD;EACF,CAPD,MAOK;IAEAJ,QAAQ,CAAC,qBAAD,CAAR,GAAkCG,OAAlC;IACA,OAAO,KAAP;EACJ;AACJ,CAbD;;AAeDF,WAAW,CAAC,MAAD,CAAX,GAAsB,CAACC,KAAD,EAAQC,OAAR,KAAmB;EACpC,IAAGD,KAAK,IAAI,EAAZ,EAAe;IACXF,QAAQ,CAAC,MAAD,CAAR,GAAmB,EAAnB;EACH,CAFD,MAEK;IAEAA,QAAQ,CAAC,MAAD,CAAR,GAAmBG,OAAnB;IACA,OAAO,KAAP;EACJ;AACJ,CARF;;AAUCF,WAAW,CAAC,QAAD,CAAX,GAAwB,CAACC,KAAD,EAAQC,OAAR,KAAmB;EACvC,IAAGD,KAAK,IAAI,EAAZ,EAAe;IACXF,QAAQ,CAAC,SAAD,CAAR,GAAsB,EAAtB;EACH,CAFD,MAEK;IAEAA,QAAQ,CAAC,SAAD,CAAR,GAAsBG,OAAtB;IACA,OAAO,KAAP;EACJ;AACJ,CARD;;AAUAF,WAAW,CAAC,QAAD,CAAX,GAAwB,CAACC,KAAD,EAAQC,OAAR,KAAmB;EACvC,IAAGD,KAAK,IAAI,EAAZ,EAAe;IACXF,QAAQ,CAAC,SAAD,CAAR,GAAsB,EAAtB;EACH,CAFD,MAEK;IAEAA,QAAQ,CAAC,SAAD,CAAR,GAAsBG,OAAtB;IACA,OAAO,KAAP;EACJ;AACJ,CARD;;AAUAF,WAAW,CAAC,UAAD,CAAX,GAA2BC,KAAD,IAAU;EAChC,IAAGA,KAAK,IAAI,CAAZ,EAAc;IACVF,QAAQ,CAAC,UAAD,CAAR,GAAuB,EAAvB;EACH,CAFD,MAEK;IAEAA,QAAQ,CAAC,UAAD,CAAR,GAAuB,sBAAvB;IACA,OAAO,KAAP;EACJ;AACJ,CARD;;AAUAC,WAAW,CAAC,OAAD,CAAX,GAAwBC,KAAD,IAAU;EAC7B,IAAGA,KAAK,IAAI,CAAZ,EAAc;IACVF,QAAQ,CAAC,OAAD,CAAR,GAAoB,EAApB;EACH,CAFD,MAEK;IAEAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,mBAApB;IACA,OAAO,KAAP;EACJ;AACJ,CARD;;AAYAC,WAAW,CAAC,OAAD,CAAX,GAAuB,CAACC,KAAD,EAAQC,OAAR,KAAmB;EACtC,IAAGD,KAAK,IAAI,EAAZ,EAAe;IACd,IAAI,gDAAgDM,IAAhD,CAAqDN,KAArD,CAAJ,EACG;MACQF,QAAQ,CAAC,OAAD,CAAR,GAAoB,EAApB;IACP,CAHJ,MAGS;MACEA,QAAQ,CAAC,OAAD,CAAR,GAAqB,uBAArB;MACA,OAAO,KAAP;IACP;EAEJ,CATD,MASK;IAEAA,QAAQ,CAAC,OAAD,CAAR,GAAoBG,OAApB;IACA,OAAO,KAAP;EACJ;AACJ,CAfD;;AAkBAF,WAAW,CAAC,UAAD,CAAX,GAAyB,CAACC,KAAD,EAAQC,OAAR,KAAkB;EACvC,IAAGD,KAAK,IAAI,KAAZ,EAAkB,CAGjB,CAHD,MAGK;IAEAF,QAAQ,CAAC,UAAD,CAAR,GAAuBG,OAAvB;IACA,OAAO,KAAP;EACJ;AACJ,CATD;;AAWAF,WAAW,CAAC,OAAD,CAAX,GAAuB,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,KAAK,GAAC,EAAjC,KAAuC;EAC1D,IAAGH,KAAK,IAAI,KAAZ,EAAkB;IACd,IAAGA,KAAK,CAACI,MAAN,IAAgBD,KAAnB,EAAyB;MACrB,IAAG,qDAAqDG,IAArD,CAA0DN,KAA1D,CAAH,EAAoE;QAC/DF,QAAQ,CAAC,OAAD,CAAR,GAAoB,EAApB;MACJ,CAFD,MAEK;QACAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,yBAApB;QACA,OAAO,KAAP;MACJ;IAEJ,CARD,MAQK;MACAA,QAAQ,CAAC,OAAD,CAAR,GAAoBI,QAApB;MACA,OAAO,KAAP;IACJ;EAEJ,CAdD,MAcK;IAEAJ,QAAQ,CAAC,OAAD,CAAR,GAAoBG,OAApB;IACA,OAAO,KAAP;EACJ;AACJ,CApBD;;AAsBAF,WAAW,CAAC,UAAD,CAAX,GAA0B,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,EAA2BK,QAA3B,EAAqCJ,KAAK,GAAC,CAA3C,KAAgD;EACtE,IAAGH,KAAK,IAAI,KAAZ,EAAkB;IACd,IAAIQ,UAAU,GAAGL,KAAK,GAAGH,KAAK,CAACI,MAA/B;;IACI,IAAIJ,KAAK,CAACI,MAAN,GAAaD,KAAjB,EAAwB;MACpBL,QAAQ,CAAC,UAAD,CAAR,GAAuB,aAAWK,KAAX,GAAiB,eAAjB,GAAkCK,UAAlC,GAA+C,kBAAtE;IACH,CAFD,MAEO;MACH,IAAGR,KAAK,CAACI,MAAN,GAAa,CAAb,IAAkBJ,KAAK,CAACI,MAAN,GAAc,CAAnC,EAAqC;QACjCN,QAAQ,CAAC,UAAD,CAAR,GAAuBI,QAAvB;MACH,CAFD,MAEK;QACAJ,QAAQ,CAAC,UAAD,CAAR,GAAuBS,QAAvB;MACJ;IACJ;EAER,CAZD,MAYK;IAEAT,QAAQ,CAAC,OAAD,CAAR,GAAoBG,OAApB;IACA,OAAO,KAAP;EACJ;AACJ,CAlBD;;AAoBJ,MAAMQ,UAAU,GAAG,MAAK;EACpB,OAAO;IAAEV,WAAF;IAAgBD;EAAhB,CAAP;AACH,CAFD;;AAIA,eAAeW,UAAf"},"metadata":{},"sourceType":"module"}
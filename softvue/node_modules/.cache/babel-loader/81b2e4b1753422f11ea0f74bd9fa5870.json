{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"checkbox-group-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_checkbox2 = _resolveComponent(\"base-checkbox2\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.itemsRef, item => {\n    return _openBlock(), _createBlock(_component_base_checkbox2, {\n      id: item.id,\n      key: item.id,\n      label: item.label,\n      value: item.value,\n      checked: item.checked,\n      onOnChange: $setup.handleOnChange\n    }, null, 8\n    /* PROPS */\n    , [\"id\", \"label\", \"value\", \"checked\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;EAuCOA,KAAK,EAAC;;;;;uBAAXC,oBAUM,KAVN,cAUM,oBATJA,oBAQkBC,SARlB,EAQkB,IARlB,EAQkBC,YAPDC,eAOC,EAPTC,IAAgB,IAAZ;yBADbC,aAQkBC,yBARlB,EAQkB;MANfC,EAAE,EAAEH,IAAI,CAACG,EAMM;MALfC,GAAG,EAAEJ,IAAI,CAACG,EAKK;MAJfE,KAAK,EAAEL,IAAI,CAACK,KAIG;MAHfC,KAAK,EAAEN,IAAI,CAACM,KAGG;MAFfC,OAAO,EAAEP,IAAI,CAACO,OAEC;MADfC,UAAS,EAAET;IACI,CARlB;;IAAA;GAQkB,CARlB;;EAAA,CASI,EAVN","names":["class","_createElementBlock","_Fragment","_renderList","$setup","item","_createBlock","_component_base_checkbox2","id","key","label","value","checked","onOnChange"],"sourceRoot":"","sources":["F:\\xampp\\htdocs\\softcode\\softvue\\src\\layout\\base\\BaseCheckboxall.vue"],"sourcesContent":["<script setup>\r\nimport { nanoid } from \"nanoid\";\r\nimport { ref } from \"vue\";\r\nimport Checkbox from \"./check-box.vue\";\r\n \r\nconst props = defineProps({\r\n  items: {\r\n    type: Array,\r\n    default: () => [],\r\n  },\r\n});\r\n \r\nconst emit = defineEmits({\r\n  onChange: {\r\n    type: \"change\",\r\n    default: () => {},\r\n  },\r\n});\r\n \r\nconst itemsRef = ref(\r\n  props.items.map((item) => {\r\n    return {\r\n      ...item,\r\n      id: nanoid(),\r\n    };\r\n  })\r\n);\r\n \r\nconst handleOnChange = (id) => {\r\n  const newValue = itemsRef.value.map((item) => ({\r\n    ...item,\r\n    checked: item.id === id ? !item.checked : item.checked,\r\n  }));\r\n  itemsRef.value = newValue;\r\n  emit(\"onChange\", newValue);\r\n};\r\n</script>\r\n \r\n<template>\r\n  <div class=\"checkbox-group-wrapper\">\r\n    <base-checkbox2\r\n      v-for=\"item in itemsRef\"\r\n      :id=\"item.id\"\r\n      :key=\"item.id\"\r\n      :label=\"item.label\"\r\n      :value=\"item.value\"\r\n      :checked=\"item.checked\"\r\n      @on-change=\"handleOnChange\"\r\n    ></base-checkbox2>\r\n  </div>\r\n</template>\r\n \r\n<style lang=\"css\">\r\n.checkbox-group-wrapper {\r\n  padding: 0.5rem;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
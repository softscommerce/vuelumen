{"ast":null,"code":"// @ts-check\n\n/**\r\n * Replacement for the Vue 2-based EventBus.\r\n *\r\n * @template EventName\r\n */\nclass Bus {\n  constructor() {\n    /**\r\n     * @type {Map<EventName, Array<{ callback: Function, once: boolean }>>}\r\n     */\n    this.eventListeners = new Map();\n  }\n  /**\r\n   * @param {EventName} eventName\r\n   * @param {Function} callback\r\n   * @param {boolean} [once]\r\n   * @private\r\n   */\n\n\n  registerEventListener(eventName, callback, once = false) {\n    if (!this.eventListeners.has(eventName)) {\n      this.eventListeners.set(eventName, []);\n    }\n\n    const eventListeners = this.eventListeners.get(eventName);\n    eventListeners.push({\n      callback,\n      once\n    });\n  }\n  /**\r\n   * See: https://v2.vuejs.org/v2/api/#vm-on\r\n   *\r\n   * @param {EventName} eventName\r\n   * @param {Function} callback\r\n   */\n\n\n  $on(eventName, callback) {\n    this.registerEventListener(eventName, callback);\n  }\n  /**\r\n   * See: https://v2.vuejs.org/v2/api/#vm-once\r\n   *\r\n   * @param {EventName} eventName\r\n   * @param {Function} callback\r\n   */\n\n\n  $once(eventName, callback) {\n    const once = true;\n    this.registerEventListener(eventName, callback, once);\n  }\n  /**\r\n   * Removes all event listeners for the given event name or names.\r\n   *\r\n   * When provided with a callback function, removes only event listeners matching the provided function.\r\n   *\r\n   * See: https://v2.vuejs.org/v2/api/#vm-off\r\n   *\r\n   * @param {EventName | EventName[]} eventNameOrNames\r\n   * @param {Function} [callback]\r\n   */\n\n\n  $off(eventNameOrNames, callback = undefined) {\n    const eventNames = Array.isArray(eventNameOrNames) ? eventNameOrNames : [eventNameOrNames];\n\n    for (const eventName of eventNames) {\n      const eventListeners = this.eventListeners.get(eventName);\n\n      if (eventListeners === undefined) {\n        continue;\n      }\n\n      if (typeof callback === 'function') {\n        for (let i = eventListeners.length - 1; i >= 0; i--) {\n          if (eventListeners[i].callback === callback) {\n            eventListeners.splice(i, 1);\n          }\n        }\n      } else {\n        this.eventListeners.delete(eventName);\n      }\n    }\n  }\n  /**\r\n   * See: https://v2.vuejs.org/v2/api/#vm-emit\r\n   *\r\n   * @param {EventName} eventName\r\n   * @param {any} args\r\n   */\n\n\n  $emit(eventName, ...args) {\n    if (!this.eventListeners.has(eventName)) {\n      return;\n    }\n\n    const eventListeners = this.eventListeners.get(eventName);\n    const eventListenerIndexesToDelete = [];\n\n    for (const [eventListenerIndex, eventListener] of eventListeners.entries()) {\n      eventListener.callback(...args);\n\n      if (eventListener.once) {\n        eventListenerIndexesToDelete.push(eventListenerIndex);\n      }\n    }\n\n    for (let i = eventListenerIndexesToDelete.length - 1; i >= 0; i--) {\n      eventListeners.splice(eventListenerIndexesToDelete[i], 1);\n    }\n  }\n\n}\n\nconst EventBus = new Bus();\nexport default EventBus;","map":{"version":3,"names":["Bus","constructor","eventListeners","Map","registerEventListener","eventName","callback","once","has","set","get","push","$on","$once","$off","eventNameOrNames","undefined","eventNames","Array","isArray","i","length","splice","delete","$emit","args","eventListenerIndexesToDelete","eventListenerIndex","eventListener","entries","EventBus"],"sources":["C:/project/softvue/src/event.js"],"sourcesContent":["// @ts-check\r\n\r\n/**\r\n * Replacement for the Vue 2-based EventBus.\r\n *\r\n * @template EventName\r\n */\r\n class Bus {\r\n    constructor() {\r\n      /**\r\n       * @type {Map<EventName, Array<{ callback: Function, once: boolean }>>}\r\n       */\r\n      this.eventListeners = new Map()\r\n    }\r\n  \r\n    /**\r\n     * @param {EventName} eventName\r\n     * @param {Function} callback\r\n     * @param {boolean} [once]\r\n     * @private\r\n     */\r\n    registerEventListener(eventName, callback, once = false) {\r\n      if (!this.eventListeners.has(eventName)) {\r\n        this.eventListeners.set(eventName, [])\r\n      }\r\n  \r\n      const eventListeners = this.eventListeners.get(eventName)\r\n      eventListeners.push({ callback, once })\r\n    }\r\n  \r\n    /**\r\n     * See: https://v2.vuejs.org/v2/api/#vm-on\r\n     *\r\n     * @param {EventName} eventName\r\n     * @param {Function} callback\r\n     */\r\n    $on(eventName, callback) {\r\n      this.registerEventListener(eventName, callback)\r\n    }\r\n  \r\n    /**\r\n     * See: https://v2.vuejs.org/v2/api/#vm-once\r\n     *\r\n     * @param {EventName} eventName\r\n     * @param {Function} callback\r\n     */\r\n    $once(eventName, callback) {\r\n      const once = true\r\n      this.registerEventListener(eventName, callback, once)\r\n    }\r\n  \r\n    /**\r\n     * Removes all event listeners for the given event name or names.\r\n     *\r\n     * When provided with a callback function, removes only event listeners matching the provided function.\r\n     *\r\n     * See: https://v2.vuejs.org/v2/api/#vm-off\r\n     *\r\n     * @param {EventName | EventName[]} eventNameOrNames\r\n     * @param {Function} [callback]\r\n     */\r\n    $off(eventNameOrNames, callback = undefined) {\r\n      const eventNames = Array.isArray(eventNameOrNames) ? eventNameOrNames : [eventNameOrNames]\r\n  \r\n      for (const eventName of eventNames) {\r\n        const eventListeners = this.eventListeners.get(eventName)\r\n  \r\n        if (eventListeners === undefined) {\r\n          continue\r\n        }\r\n  \r\n        if (typeof callback === 'function') {\r\n          for (let i = eventListeners.length - 1; i >= 0; i--) {\r\n            if (eventListeners[i].callback === callback) {\r\n              eventListeners.splice(i, 1)\r\n            }\r\n          }\r\n        } else {\r\n          this.eventListeners.delete(eventName)\r\n        }\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * See: https://v2.vuejs.org/v2/api/#vm-emit\r\n     *\r\n     * @param {EventName} eventName\r\n     * @param {any} args\r\n     */\r\n    $emit(eventName, ...args) {\r\n      if (!this.eventListeners.has(eventName)) {\r\n        return\r\n      }\r\n  \r\n      const eventListeners = this.eventListeners.get(eventName)\r\n      const eventListenerIndexesToDelete = []\r\n      for (const [eventListenerIndex, eventListener] of eventListeners.entries()) {\r\n        eventListener.callback(...args)\r\n  \r\n        if (eventListener.once) {\r\n          eventListenerIndexesToDelete.push(eventListenerIndex)\r\n        }\r\n      }\r\n  \r\n      for (let i = eventListenerIndexesToDelete.length - 1; i >= 0; i--) {\r\n        eventListeners.splice(eventListenerIndexesToDelete[i], 1)\r\n      }\r\n    }\r\n  }\r\n  \r\n  const EventBus = new Bus()\r\n  \r\n  export default EventBus"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createStore } from \"vuex\"; // import actions from './actions.js'\n// import mutations from \"./mutations.js\";\n// import getters from \"./getters.js\";\n// import productStore from '@/modules/products/store/index.js'\n// const moduleA = {\n//   productStore\n// }\n\nconst store = createStore({\n  // modules: {\n  //   products: moduleA,\n  // }\n  // actions,\n  // mutations,\n  // getters\n  // productStore\n  state() {\n    return {\n      notifications: []\n    };\n  },\n\n  mutations: {\n    PUSH_NOTIFICATION(state, notification) {\n      state.notifications.push({ ...notification,\n        id: (Math.random().toString(36) + Date.now().toString(36)).substr(2)\n      });\n    },\n\n    REMOVE_NOTIFICATION(state, notificationToRemove) {\n      state.notifications = state.notifications.filter(notification => {\n        return notification.id != notificationToRemove.id;\n      });\n    }\n\n  },\n  actions: {\n    addNotification({\n      commit\n    }, notification) {\n      commit(\"PUSH_NOTIFICATION\", notification);\n    },\n\n    removeNotification({\n      commit\n    }, notification) {\n      commit(\"REMOVE_NOTIFICATION\", notification);\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","notifications","mutations","PUSH_NOTIFICATION","notification","push","id","Math","random","toString","Date","now","substr","REMOVE_NOTIFICATION","notificationToRemove","filter","actions","addNotification","commit","removeNotification"],"sources":["F:/softvue/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\r\n// import actions from './actions.js'\r\n// import mutations from \"./mutations.js\";\r\n// import getters from \"./getters.js\";\r\n\r\n// import productStore from '@/modules/products/store/index.js'\r\n\r\n// const moduleA = {\r\n//   productStore\r\n// }\r\n\r\nconst store = createStore({\r\n  // modules: {\r\n  //   products: moduleA,\r\n  // }\r\n  // actions,\r\n  // mutations,\r\n  // getters\r\n  // productStore\r\n\r\n  state() {\r\n    return {\r\n      notifications: [],\r\n    };\r\n  },\r\n  mutations: {\r\n    PUSH_NOTIFICATION(state, notification) {\r\n      state.notifications.push({\r\n        ...notification,\r\n        id: (Math.random().toString(36) + Date.now().toString(36)).substr(2),\r\n      });\r\n    },\r\n\r\n    REMOVE_NOTIFICATION(state, notificationToRemove){\r\n      state.notifications = state.notifications.filter(notification =>{\r\n        return notification.id != notificationToRemove.id;\r\n      })\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    addNotification({ commit }, notification) {\r\n      commit(\"PUSH_NOTIFICATION\", notification);\r\n    },\r\n\r\n    removeNotification({ commit }, notification) {\r\n      commit(\"REMOVE_NOTIFICATION\", notification);\r\n    },\r\n  },\r\n\r\n\r\n\r\n});\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B,C,CACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EAEAE,KAAK,GAAG;IACN,OAAO;MACLC,aAAa,EAAE;IADV,CAAP;EAGD,CAbuB;;EAcxBC,SAAS,EAAE;IACTC,iBAAiB,CAACH,KAAD,EAAQI,YAAR,EAAsB;MACrCJ,KAAK,CAACC,aAAN,CAAoBI,IAApB,CAAyB,EACvB,GAAGD,YADoB;QAEvBE,EAAE,EAAE,CAACC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,IAA6BC,IAAI,CAACC,GAAL,GAAWF,QAAX,CAAoB,EAApB,CAA9B,EAAuDG,MAAvD,CAA8D,CAA9D;MAFmB,CAAzB;IAID,CANQ;;IAQTC,mBAAmB,CAACb,KAAD,EAAQc,oBAAR,EAA6B;MAC9Cd,KAAK,CAACC,aAAN,GAAsBD,KAAK,CAACC,aAAN,CAAoBc,MAApB,CAA2BX,YAAY,IAAG;QAC9D,OAAOA,YAAY,CAACE,EAAb,IAAmBQ,oBAAoB,CAACR,EAA/C;MACD,CAFqB,CAAtB;IAGD;;EAZQ,CAda;EA6BxBU,OAAO,EAAE;IACPC,eAAe,CAAC;MAAEC;IAAF,CAAD,EAAad,YAAb,EAA2B;MACxCc,MAAM,CAAC,mBAAD,EAAsBd,YAAtB,CAAN;IACD,CAHM;;IAKPe,kBAAkB,CAAC;MAAED;IAAF,CAAD,EAAad,YAAb,EAA2B;MAC3Cc,MAAM,CAAC,qBAAD,EAAwBd,YAAxB,CAAN;IACD;;EAPM;AA7Be,CAAD,CAAzB;AA0CA,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-e8558cd2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"Wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"Input\"\n};\nconst _hoisted_3 = [\"type\", \"value\", \"placeholder\"];\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"input\",\n  class: \"Input-label\"\n}, \"First name\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n    id: \"input\",\n    class: _normalizeClass([\"Input-text\", [$props.classValue]]),\n    type: $props.type,\n    value: $props.modelValue,\n    placeholder: $props.placeholder,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, null, 42\n  /* CLASS, PROPS, HYDRATE_EVENTS */\n  , _hoisted_3), _hoisted_4])]);\n}","map":{"version":3,"mappings":";;;;;EACKA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;gEAUTC,oBAAyD,OAAzD,EAAyD;EAAlDC,GAAG,EAAC,OAA8C;EAAtCF,KAAK,EAAC;AAAgC,CAAzD,EAAuC,YAAvC,EAAiD;AAAA;AAAjD;;;uBAXJG,oBAaM,KAbN,cAaM,CAZJF,oBAWM,KAXN,cAWM,CAVJA,oBAQO,OARP,EAQO;IAPFG,EAAE,EAAC,OAOD;IANFJ,KAAK,mBAAC,YAAD,EAAa,CACTK,iBADS,CAAb,EAMH;IAJDC,IAAI,EAAED,WAIL;IAHDE,KAAK,EAAEF,iBAGN;IAFDG,WAAW,EAAEH,kBAEZ;IADDI,OAAK,sCAAEC,WAAK,mBAAL,EAA2BC,MAAM,CAACC,MAAP,CAAcL,KAAzC,CAAF;EACJ,CARP;;EAAA,aAUI,EADJM,UACI,CAXN,CAYI,CAbN","names":["class","_createElementVNode","for","_createElementBlock","id","$props","type","value","placeholder","onInput","_ctx","$event","target","_hoisted_4"],"sourceRoot":"","sources":["F:\\softvue\\src\\layout\\base\\BaseInputbb.vue"],"sourcesContent":["<template>\r\n<div class=\"Wrapper\">\r\n  <div class=\"Input\">\r\n    <input  \r\n         id=\"input\"\r\n         class=\"Input-text\"  \r\n         :class=\"[classValue]\"\r\n         :type=\"type\"\r\n         :value=\"modelValue\"\r\n         :placeholder=\"placeholder\"\r\n         @input=\"$emit('update:modelValue', $event.target.value)\"\r\n         />\r\n    <label for=\"input\" class=\"Input-label\">First name</label>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n    props: {\r\n        label: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        borderdiv: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        modelValue: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n        placeholder: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        type: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        labelBorder: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n        classValue: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n    },\r\n    setup() {\r\n        \r\n    }\r\n\r\n  \r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Dosis');\r\n\r\n:root {\r\n  /* generic */\r\n  --gutterSm: 0.4rem;\r\n  --gutterMd: 0.8rem;\r\n  --gutterLg: 1.6rem;\r\n  --gutterXl: 2.4rem;\r\n  --gutterXx: 7.2rem;\r\n  --colorPrimary400: #7e57c2;\r\n  --colorPrimary600: #5e35b1;\r\n  --colorPrimary800: #4527a0;\r\n  --fontFamily: \"Dosis\", sans-serif;\r\n  --fontSizeSm: 1.2rem;\r\n  --fontSizeMd: 1.6rem;\r\n  --fontSizeLg: 2.1rem;\r\n  --fontSizeXl: 2.8rem;\r\n  --fontSizeXx: 3.6rem;\r\n  --lineHeightSm: 1.1;\r\n  --lineHeightMd: 1.8;\r\n  --transitionDuration: 300ms;\r\n  --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);\r\n  \r\n  /* floated labels */\r\n  --inputPaddingV: var(--gutterMd);\r\n  --inputPaddingH: var(--gutterLg);\r\n  --inputFontSize: var(--fontSizeLg);\r\n  --inputLineHeight: var(--lineHeightMd);\r\n  --labelScaleFactor: 0.8;\r\n  --labelDefaultPosY: 50%;\r\n  --labelTransformedPosY: calc(\r\n    (var(--labelDefaultPosY)) - \r\n    (var(--inputPaddingV) * var(--labelScaleFactor)) - \r\n    (var(--inputFontSize) * var(--inputLineHeight))\r\n  );\r\n  --inputTransitionDuration: var(--transitionDuration);\r\n  --inputTransitionTF: var(--transitionTF);\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n// .Wrapper {\r\n//   flex: 0 0 80%;\r\n//   max-width: 80%;\r\n// }\r\n\r\n\r\n\r\n.Input {\r\n  position: relative;\r\n}\r\n\r\n.Input-text {\r\n  display: block;\r\n  margin: 0;\r\n  padding: var(--inputPaddingV) var(--inputPaddingH);\r\n  color: inherit;\r\n  width: 100%;\r\n  font-family: inherit;\r\n  font-size: var(--inputFontSize);\r\n  font-weight: inherit;\r\n  line-height: var(--inputLineHeight);\r\n  border: none;\r\n  border-radius: 0.4rem;\r\n  transition: box-shadow var(--transitionDuration);\r\n}\r\n\r\n.Input-text::placeholder {\r\n  color: #B0BEC5;\r\n}\r\n\r\n.Input-text:focus {\r\n  outline: none;\r\n  box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary600);\r\n}\r\n\r\n.Input-label {\r\n  display: block;\r\n  position: absolute;\r\n  bottom: 50%;\r\n  left: 1rem;\r\n  color: #fff;\r\n  font-family: inherit;\r\n  font-size: var(--inputFontSize);\r\n  font-weight: inherit;\r\n  line-height: var(--inputLineHeight);\r\n  opacity: 0;\r\n  transform: \r\n    translate3d(0, var(--labelDefaultPosY), 0)\r\n    scale(1);\r\n  transform-origin: 0 0;\r\n  transition:\r\n    opacity var(--inputTransitionDuration) var(--inputTransitionTF),\r\n    transform var(--inputTransitionDuration) var(--inputTransitionTF),\r\n    visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),\r\n    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);\r\n}\r\n\r\n.Input-text:placeholder-shown + .Input-label {\r\n  visibility: hidden;\r\n  z-index: -1;\r\n}\r\n\r\n.Input-text:not(:placeholder-shown) + .Input-label,\r\n.Input-text:focus:not(:placeholder-shown) + .Input-label {\r\n  visibility: visible;\r\n  z-index: 1;\r\n  opacity: 1;\r\n  transform:\r\n    translate3d(0, var(--labelTransformedPosY), 0)\r\n    scale(var(--labelScaleFactor));\r\n  transition:\r\n    transform var(--inputTransitionDuration),\r\n    visibility 0ms,\r\n    z-index 0ms;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}
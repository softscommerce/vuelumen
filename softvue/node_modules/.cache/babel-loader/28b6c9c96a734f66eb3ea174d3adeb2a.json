{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-dde07b18\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"type\", \"value\", \"placeholder\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"vue_input\", [$props.divClass]])\n  }, [_createElementVNode(\"label\", {\n    class: _normalizeClass($props.labelClass)\n  }, _toDisplayString($props.label), 3\n  /* TEXT, CLASS */\n  ), _createElementVNode(\"input\", {\n    class: _normalizeClass([\"field\", [$props.classValue]]),\n    type: $props.type,\n    value: $props.modelValue,\n    placeholder: $props.placeholder,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, null, 42\n  /* CLASS, PROPS, HYDRATE_EVENTS */\n  , _hoisted_1)], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;;;uBACIA,oBAIM,KAJN,EAIM;IAJDC,KAAK,mBAAC,WAAD,EAAY,CAAUC,eAAV,CAAZ;EAIJ,CAJN,GACIC,oBAA8C,OAA9C,EAA8C;IAAtCF,KAAK,kBAAEC,iBAAF;EAAiC,CAA9C,mBAA8BA,aAA9B,EAAmC;EAAA;EAAnC,GACAC,oBAC+D,OAD/D,EAC+D;IADxDF,KAAK,mBAAC,OAAD,EAAQ,CAAUC,iBAAV,CAAR,EACmD;IADnBE,IAAI,EAAEF,WACa;IADNG,KAAK,EAAEH,iBACD;IADcI,WAAW,EAAEJ,kBAC3B;IAA1DK,OAAK,sCAAEC,WAAK,mBAAL,EAA2BC,MAAM,CAACC,MAAP,CAAcL,KAAzC,CAAF;EAAqD,CAD/D;;EAAA,cAFJ;;EAAA","names":["_createElementBlock","class","$props","_createElementVNode","type","value","placeholder","onInput","_ctx","$event","target"],"sourceRoot":"","sources":["F:\\softvue\\src\\layout\\base\\CheckInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"vue_input\" :class=\"[divClass]\">\r\n        <label :class=\"labelClass\">{{ label }}</label>\r\n        <input class=\"field\" :class=\"[classValue]\" :type=\"type\" :value=\"modelValue\" :placeholder=\"placeholder\"\r\n            @input=\"$emit('update:modelValue', $event.target.value)\" />\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    props: {\r\n        label: {\r\n            type: String,\r\n            default: '',\r\n        },\r\n        modelValue: {\r\n            type: [String, Number],\r\n            default: '',\r\n        },\r\n        placeholder: {\r\n            type: String,\r\n            default: '',\r\n        },\r\n        type: {\r\n            type: String,\r\n            default: '',\r\n        },\r\n        divClass: {\r\n            type: [String, Number],\r\n            default: '',\r\n        },\r\n        labelClass: {\r\n            default: '',\r\n        },\r\n        classValue: {\r\n            type: [String, Number],\r\n            default: '',\r\n        },\r\n    },\r\n    setup() {\r\n\r\n    },\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.vue_input {\r\n    width: 100%;\r\n    label {\r\n        margin-bottom: 8px;\r\n        display: inline-block;\r\n        color: #666;\r\n        font-size: 18px;\r\n        // text-shadow: 0 1px 1px #5b8fce;\r\n    }\r\n    input {\r\n        width: 100%;\r\n        height: 45px;\r\n        border: none;\r\n        outline: none;\r\n        padding: 4px 16px;\r\n        border-radius: 4px;\r\n        color: #444;\r\n        letter-spacing: 1px;\r\n        font-size: 16px;\r\n        box-shadow: -5px -5px 9px rgba(255, 255, 255, 0.45), 5px 5px 9px rgba(94, 104, 121, 0.3),-5px -5px 9px rgba(255, 255, 255, 0.45),\r\n            5px 5px 9px rgba(94, 104, 121, 0.3);\r\n        background-color: #f9f9f9;\r\n        position: relative;\r\n        &::placeholder {\r\n            color: #999;\r\n        }\r\n    }\r\n\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
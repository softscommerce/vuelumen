{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d9bdd202\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<section id=\\\"header-container\\\" data-v-d9bdd202><select data-v-d9bdd202><option disabled data-v-d9bdd202>What&#39;s your favorite movie ?</option><option value=\\\"choix-2\\\" data-v-d9bdd202>Inception</option><option value=\\\"choix-3\\\" data-v-d9bdd202>Godzilla</option><option value=\\\"choix-4\\\" data-v-d9bdd202>Back to the future</option><option value=\\\"choix-5\\\" data-v-d9bdd202>Shutter Island</option></select></section>\", 1);\n\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";;;;;;oBAEIA;;uBADAC,oBAUM,KAVN,EAUM,IAVN,EAUMC,UAVN","names":["_hoisted_1","_createElementBlock","_hoisted_2"],"sourceRoot":"","sources":["F:\\softvue\\src\\layout\\base\\BaseSelectn.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <section id=\"header-container\">\r\n        <select>\r\n            <option disabled>What's your favorite movie ?</option>\r\n            <option value=\"choix-2\">Inception</option>\r\n            <option value=\"choix-3\">Godzilla</option>\r\n            <option value=\"choix-4\">Back to the future</option>\r\n            <option value=\"choix-5\">Shutter Island</option>\r\n        </select>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default{\r\n       mounted(){\r\n  const inputField = document.querySelector('.chosen-value');\r\nconst dropdown = document.querySelector('.value-list');\r\nconst dropdownArray = [... document.querySelectorAll('li')];\r\nconsole.log(typeof dropdownArray)\r\ndropdown.classList.add('open');\r\ninputField.focus(); // Demo purposes only\r\nlet valueArray = [];\r\ndropdownArray.forEach(item => {\r\n  valueArray.push(item.textContent);\r\n});\r\n\r\nconst closeDropdown = () => {\r\n  dropdown.classList.remove('open');\r\n}\r\n\r\ninputField.addEventListener('input', () => {\r\n  dropdown.classList.add('open');\r\n  let inputValue = inputField.value.toLowerCase();\r\n  let valueSubstring;\r\n  if (inputValue.length > 0) {\r\n    for (let j = 0; j < valueArray.length; j++) {\r\n      if (!(inputValue.substring(0, inputValue.length) === valueArray[j].substring(0, inputValue.length).toLowerCase())) {\r\n        dropdownArray[j].classList.add('closed');\r\n      } else {\r\n        dropdownArray[j].classList.remove('closed');\r\n      }\r\n    }\r\n  } else {\r\n    for (let i = 0; i < dropdownArray.length; i++) {\r\n      dropdownArray[i].classList.remove('closed');\r\n    }\r\n  }\r\n});\r\n\r\ndropdownArray.forEach(item => {\r\n  item.addEventListener('click', (evt) => {\r\n    inputField.value = item.textContent;\r\n    dropdownArray.forEach(dropdown => {\r\n      dropdown.classList.add('closed');\r\n    });\r\n  });\r\n})\r\n\r\ninputField.addEventListener('focus', () => {\r\n   inputField.placeholder = 'Type to filter';\r\n   dropdown.classList.add('open');\r\n   dropdownArray.forEach(dropdown => {\r\n     dropdown.classList.remove('closed');\r\n   });\r\n});\r\n\r\ninputField.addEventListener('blur', () => {\r\n   inputField.placeholder = 'Select state';\r\n  dropdown.classList.remove('open');\r\n});\r\n\r\ndocument.addEventListener('click', (evt) => {\r\n  const isDropdown = dropdown.contains(evt.target);\r\n  const isInput = inputField.contains(evt.target);\r\n  if (!isDropdown && !isInput) {\r\n    dropdown.classList.remove('open');\r\n  }\r\n});\r\n       }\r\n        }\r\n</script>\r\n\r\n<style scoped>\r\n#header-container {\r\n  display: block;\r\n  position: absolute;\r\n  width: 320px;\r\n  height: 55px;\r\n  left: 50%;\r\n  top: 50%;\r\n  margin-left: -160px;\r\n  margin-top: -87px;\r\n}\r\n\r\n/* Select style here */\r\n\r\nselect {\r\n  margin: 0 auto;\r\n  color: #EC6F66;\r\n  width: 310px;\r\n  padding: 15px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n  background: url(http://sharpik.com/wip/cuteselect/arrow.png) 295px 12px no-repeat white;\r\n}\r\n\r\nselect:hover {\r\n  background-color: transparent;\r\n  color: white;\r\n  padding: 15px 5px 15px 25px;\r\n}\r\n\r\nselect option {\r\n  background-color: white;\r\n  color: gray;\r\n  width: 310px;\r\n  padding: 10px 15px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\nselect option:hover {\r\n  padding-left: 25px;\r\n  width: 270px;\r\n  color: #EC6F66;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
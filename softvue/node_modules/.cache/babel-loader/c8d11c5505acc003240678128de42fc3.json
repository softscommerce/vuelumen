{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-942a6e06\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"value\", \"rows\", \"placeholder\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"errorMessage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"vue_textarea\", [$props.divClass]])\n  }, [_createElementVNode(\"label\", {\n    class: _normalizeClass($props.labelClass)\n  }, [_createTextVNode(_toDisplayString($props.label) + \" \", 1\n  /* TEXT */\n  ), $props.validation ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \"*\")) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  ), _createElementVNode(\"textarea\", {\n    class: _normalizeClass([\"field\", [$props.classValue]]),\n    value: $props.modelValue,\n    rows: $props.rowNum,\n    placeholder: $props.placeholder,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, null, 42\n  /* CLASS, PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), $props.validation ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($props.validation), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;;;;;;;EAWcA,KAAK,EAAC;;;uBAVhBC,oBAWM,KAXN,EAWM;IAXDD,KAAK,mBAAC,cAAD,EAAe,CAAUE,eAAV,CAAf;EAWJ,CAXN,GACIC,oBAAgF,OAAhF,EAAgF;IAAxEH,KAAK,kBAAEE,iBAAF;EAAmE,CAAhF,qCAA8BA,gBAAQ,KAAC;EAAA;KAAYA,mCAAZD,oBAAiC,MAAjC,EAAiCG,UAAjC,EAAyB,GAAzB,uCAAvC;;EAAA,GACAD,oBAOY,UAPZ,EAOY;IANRH,KAAK,mBAAC,OAAD,EAAQ,CACJE,iBADI,CAAR,EAMG;IAJPG,KAAK,EAAEH,iBAIA;IAHPI,IAAI,EAAEJ,aAGC;IAFPK,WAAW,EAAEL,kBAEN;IADPM,OAAK,sCAAEC,WAAK,mBAAL,EAA2BC,MAAM,CAACC,MAAP,CAAcN,KAAzC,CAAF;EACE,CAPZ;;EAAA,eAQiCH,mCAAjCD,oBAAkE,MAAlE,cAAkEW,iBAAnBV,iBAAmB,CAAlE,EAAyD;EAAA;EAAzD,uCAVJ;;EAAA","names":["class","_createElementBlock","$props","_createElementVNode","_hoisted_1","value","rows","placeholder","onInput","_ctx","$event","target","_toDisplayString"],"sourceRoot":"","sources":["F:\\xampp\\htdocs\\softcode\\softvue\\src\\layout\\base\\BaseTextarea.vue"],"sourcesContent":["<template>\r\n    <div class=\"vue_textarea\" :class=\"[divClass]\">\r\n        <label :class=\"labelClass\">{{ label }} <span v-if=\"validation\" >*</span></label>\r\n        <textarea \r\n            class=\"field\"\r\n            :class=\"[classValue]\"\r\n            :value=\"modelValue\"\r\n            :rows=\"rowNum\"\r\n            :placeholder=\"placeholder\"\r\n            @input=\"$emit('update:modelValue', $event.target.value)\"\r\n        ></textarea>\r\n        <span class=\"errorMessage\" v-if=\"validation\">{{validation}}</span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        label: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        modelValue: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n        placeholder: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        type: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        divClass: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n        labelClass: {\r\n            default:'',\r\n        },\r\n        classValue: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n        rowNum: {\r\n            default:'',\r\n        },\r\n         validation:{\r\n             type: String,\r\n            default: '',\r\n        }\r\n    },\r\n    setup() {\r\n        \r\n    },\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n   .vue_textarea {\r\n    width: 100%;\r\n    label {\r\n        margin-bottom: 8px;\r\n        display: inline-block;\r\n        color: #555;\r\n        font-size: 16px;\r\n        // text-shadow: 0 1px 1px #5b8fce;\r\n    }\r\n    textarea {\r\n        width: 100%;\r\n        height: auto;\r\n        border: none;\r\n        outline: none;\r\n        padding: 4px 16px;\r\n        border-radius: 4px;\r\n        color: #444;\r\n        letter-spacing: 1px;\r\n        font-size: 16px;\r\n        box-shadow: -5px -5px 9px rgba(255, 255, 255, 0.45), 5px 5px 9px rgba(94, 104, 121, 0.3),-5px -5px 9px rgba(255, 255, 255, 0.45),\r\n            5px 5px 9px rgba(94, 104, 121, 0.3);\r\n        background-color: #f9f9f9;\r\n        position: relative;\r\n        &::placeholder {\r\n            color: #999;\r\n        }\r\n    }\r\n\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
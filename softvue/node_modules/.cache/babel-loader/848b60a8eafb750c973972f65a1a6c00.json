{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f235edc8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"aria-checked\"];\nconst _hoisted_2 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass($setup.wrapperClass),\n    tabindex: \"0\",\n    role: \"checkbox\",\n    \"aria-checked\": $setup.props.checked,\n    onClick: $setup.handleClick\n  }, [_createElementVNode(\"span\", {\n    class: _normalizeClass($setup.iconClass)\n  }, [!$setup.props.checked ? (_openBlock(), _createBlock($setup[\"Square\"], {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), $setup.props.checked ? (_openBlock(), _createBlock($setup[\"CheckedSquare\"], {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  ), _createElementVNode(\"span\", {\n    id: `label-${$setup.props.id}`,\n    class: \"label\"\n  }, _toDisplayString($setup.props.label), 9\n  /* TEXT, PROPS */\n  , _hoisted_2)], 10\n  /* CLASS, PROPS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;;;;;uBA0DEA,oBAiBM,KAjBN,EAiBM;IAhBHC,KAAK,kBAAEC,mBAAF,CAgBF;IAfJC,QAAQ,EAAC,GAeL;IAdJC,IAAI,EAAC,UAcD;IAbH,gBAAcF,aAAMG,OAajB;IAZHC,OAAK,EAAEJ;EAYJ,CAjBN,GAOEK,oBAGO,MAHP,EAGO;IAHAN,KAAK,kBAAEC,gBAAF;EAGL,CAHP,IACiBA,aAAMG,yBAArBG,aAAgCN,gBAAhC,EAAgC;IAAAO;EAAA,CAAhC,wCACqBP,aAAMG,yBAA3BG,aAAsCN,uBAAtC,EAAsC;IAAAO;EAAA,CAAtC,uCAFF;;EAAA,GAIAF,oBAKO,MALP,EAKO;IAJJG,EAAE,WAAWR,aAAMQ,EAAE,EAIjB;IAHLT,KAAK,EAAC;EAGD,CALP,mBAIKC,aAAMS,MAJX,EAIgB;EAAA;EAJhB,EAIgBC,UAJhB,EAXF;;EAAA","names":["_createElementBlock","class","$setup","tabindex","role","checked","onClick","_createElementVNode","_createBlock","key","id","label","_hoisted_2"],"sourceRoot":"","sources":["F:\\xampp\\htdocs\\softcode\\softvue\\src\\layout\\base\\BaseCheckbox2.vue"],"sourcesContent":["//checkbox.vue\r\n<script setup>\r\nimport { computed } from \"vue\";\r\nimport CheckedSquare from \"../icons/check-square.svg?component\";\r\nimport Square from \"../icons/square.svg?component\";\r\n \r\nconst emit = defineEmits({\r\n  onChange: {\r\n    type: \"change\",\r\n    default: () => {},\r\n  },\r\n});\r\n \r\nconst props = defineProps({\r\n  value: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  label: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  checked: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  id: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n});\r\n \r\nconst wrapperClass = computed(() => {\r\n  const { checked } = props;\r\n  return {\r\n    \"check-box\": true,\r\n    \"check-box--checked\": checked,\r\n  };\r\n});\r\n \r\nconst iconClass = computed(() => {\r\n  const { checked } = props;\r\n  return {\r\n    \"check-box__icon\": true,\r\n    \"check-box__icon--checked\": checked,\r\n  };\r\n});\r\n \r\nconst handleClick = () => {\r\n  emit(\"onChange\", props.id);\r\n};\r\n</script>\r\n \r\n<template>\r\n  <div\r\n    :class=\"wrapperClass\"\r\n    tabindex=\"0\"\r\n    role=\"checkbox\"\r\n    :aria-checked=\"props.checked\"\r\n    @click=\"handleClick\"\r\n  >\r\n    <span :class=\"iconClass\">\r\n      <Square v-if=\"!props.checked\" />\r\n      <CheckedSquare v-if=\"props.checked\" />\r\n    </span>\r\n    <span\r\n      :id=\"`label-${props.id}`\"\r\n      class=\"label\"\r\n    >\r\n      {{ props.label }}\r\n    </span>\r\n  </div>\r\n</template>\r\n \r\n<style scoped lang=\"css\">\r\n.check-box {\r\n  align-items: center;\r\n  border: 1px solid transparent;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  padding: 0.5rem;\r\n  user-select: none;\r\n}\r\n \r\n.label {\r\n  padding-left: 0.5rem;\r\n}\r\n \r\n.check-box__icon {\r\n  display: block;\r\n  height: 1rem;\r\n  width: 1rem;\r\n \r\n  svg {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
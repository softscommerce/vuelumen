{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  const _component_notification_list = _resolveComponent(\"notification-list\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_router_view), _createVNode(_component_notification_list)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;6DACAA,aAA2BC,sBAA3B,GACED,aAAuCE,4BAAvC","names":["_createVNode","_component_router_view","_component_notification_list"],"sourceRoot":"","sources":["F:\\xampp\\htdocs\\softcode\\softvue\\src\\App.vue"],"sourcesContent":["<template>\n<router-view></router-view>\n  <notification-list></notification-list>\n\n</template>\n\n<script>\nimport NotificationList from './components/notification/NotificationList.vue';\nimport User from './middleware/User';\nexport default{\n  components:{\n    NotificationList\n  },\n  mounted(){\n    User.hasToken();\n  },\n  created(){\n    User.hasToken();\n    var nowTime = new Date().getTime();\n    if( nowTime >= localStorage.getItem('expaire') * 1000){\n      User.logOut();\n      this.$router.push({name: \"Login-page\"});\n    }\n\n  }\n\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module"}
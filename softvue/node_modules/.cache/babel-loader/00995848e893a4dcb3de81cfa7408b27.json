{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"margin-top\": \"20px\",\n    \"margin-bottom\": \"20px\",\n    \"padding\": \"50px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NotificationPage = _resolveComponent(\"NotificationPage\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, \"hello \" + _toDisplayString($setup.firstName), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_NotificationPage)])]);\n}","map":{"version":3,"mappings":";;EAIUA,KAA0D,EAA1D;IAAA;IAAA;IAAA;EAAA;;;;;uBAHVC,oBAOM,KAPN,EAOM,IAPN,EAOM,CANNC,oBAA2B,GAA3B,EAA2B,IAA3B,EAAG,WAAOC,iBAAEC,gBAAF,CAAV,EAAqB;EAAA;EAArB,CAMM,EAJDF,oBAGM,KAHN,cAGM,CAFLG,aAAoBC,2BAApB,CAEK,CAHN,CAIC,CAPN","names":["style","_createElementBlock","_createElementVNode","_toDisplayString","$setup","_createVNode","_component_NotificationPage"],"sourceRoot":"","sources":["F:\\softvue\\src\\components\\main\\Test.vue"],"sourcesContent":["<template>\r\n<div>\r\n<p>hello  {{firstName}}</p>\r\n\r\n     <div style=\"margin-top:20px; margin-bottom:20px; padding:50px;\">\r\n      <NotificationPage />\r\n\r\n     </div>\r\n</div>\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nconst firstName = ref('');\r\nconst items = ['cat', 'dog', 'mouse', 'cow', 'birds', 'turn', 'list'];\r\n\r\nconst workstation = ref('');\r\n\r\n\r\n\r\nconst displayToKey  = (event) =>{\r\n   console.log(event);\r\n   workstation.value = event;\r\n}\r\n\r\nconst some_event = () =>{\r\n     if(workstation.value == \"Work Station\"){\r\n      alert('please select work station');\r\n   }else{\r\n       workstation.value = event;\r\n         console.log(workstation.value);\r\n   }\r\n}\r\n\r\n// const displayToCat = (event) =>{\r\n//     console.log('cat'+event);\r\n// }\r\n</script>"]},"metadata":{},"sourceType":"module"}
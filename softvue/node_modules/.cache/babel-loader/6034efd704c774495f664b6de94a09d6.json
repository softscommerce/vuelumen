{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-496a1dd2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"id\", \"type\", \"value\", \"placeholder\"];\nconst _hoisted_2 = {\n  for: \"weight\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    style: {\n      \"position\": \"relative\"\n    },\n    class: _normalizeClass([$props.labelBorder])\n  }, [_createElementVNode(\"input\", {\n    class: _normalizeClass([\"basic-slide\", [$props.classValue]]),\n    id: _ctx.weight,\n    type: $props.type,\n    value: $props.modelValue,\n    placeholder: $props.placeholder,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, null, 42\n  /* CLASS, PROPS, HYDRATE_EVENTS */\n  , _hoisted_1), _createElementVNode(\"label\", _hoisted_2, _toDisplayString($props.label), 1\n  /* TEXT */\n  )], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;;;EAYgBA,GAAG,EAAC;;;uBAXhBC,oBAYM,KAZN,EAYM;IAZDC,KAA0B,EAA1B;MAAA;IAAA,CAYC;IAZ2BC,KAAK,mBAAGC,kBAAH;EAYhC,CAZN,GAEKC,oBAQE,OARF,EAQE;IAPFF,KAAK,mBAAC,aAAD,EAAc,CAEVC,iBAFU,CAAd,EAOH;IANDE,EAAE,EAAEC,WAMH;IAJDC,IAAI,EAAEJ,WAIL;IAHDK,KAAK,EAAEL,iBAGN;IAFDM,WAAW,EAAEN,kBAEZ;IADDO,OAAK,sCAAEJ,WAAK,mBAAL,EAA2BK,MAAM,CAACC,MAAP,CAAcJ,KAAzC,CAAF;EACJ,CARF;;EAAA,eASAJ,oBAAqC,OAArC,cAAqCS,iBAAfV,YAAe,CAArC,EAA2B;EAAA;EAA3B,EAXL;;EAAA","names":["for","_createElementBlock","style","class","$props","_createElementVNode","id","_ctx","type","value","placeholder","onInput","$event","target","_toDisplayString"],"sourceRoot":"","sources":["F:\\softvue\\src\\layout\\base\\BaseInput.vue"],"sourcesContent":["<template>\r\n    <div style=\"position:relative;\" :class=\"[labelBorder]\" >\r\n\r\n         <input \r\n         class=\"basic-slide\" \r\n         :id=\"weight\"  \r\n         :class=\"[classValue]\"\r\n         :type=\"type\"\r\n         :value=\"modelValue\"\r\n         :placeholder=\"placeholder\"\r\n         @input=\"$emit('update:modelValue', $event.target.value)\"\r\n         />\r\n         <label for=\"weight\">{{label}}</label>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n    props: {\r\n        label: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        modelValue: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n        placeholder: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n\r\n         id: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        type: {\r\n            type: String,\r\n            default:'',\r\n        },\r\n        labelBorder: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n        classValue: {\r\n            type:[String,Number],\r\n            default:'',\r\n        },\r\n    },\r\n    setup() {\r\n        \r\n    },\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\r\n.clean-slide {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 215px;\r\n  padding: 10px 0 10px 15px;\r\n  font-family: \"Open Sans\", sans;\r\n  font-weight: 400;\r\n  color: #377D6A;\r\n  background: #efefef;\r\n  border: 0;\r\n  border-radius: 3px;\r\n  outline: 0;\r\n  text-indent: 60px; // Arbitrary.\r\n  transition: all .3s ease-in-out;\r\n  \r\n  &::-webkit-input-placeholder {\r\n    color: #efefef;\r\n    text-indent: 0;\r\n    font-weight: 300;\r\n  }\r\n\r\n  + label {\r\n    display: inline-block;\r\n    position: absolute;\r\n    transform: translateX(0);\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 13px 15px;\r\n    font-size: 11px;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    color: #032429;\r\n    text-align: left;\r\n    text-shadow: 0 1px 0 rgba(255,255,255,.4);\r\n    transition: all .3s ease-in-out, color .3s ease-out;\r\n    border-top-left-radius: 3px;\r\n    border-bottom-left-radius: 3px;\r\n    overflow: hidden;\r\n    \r\n    &:after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      right: 100%;\r\n      bottom: 0;\r\n      width: 100%;\r\n      background: #7AB893;\r\n      z-index: -1;\r\n      transform: translate(0);\r\n      transition: all .3s ease-in-out;\r\n      border-top-left-radius: 3px;\r\n      border-bottom-left-radius: 3px;\r\n    }\r\n  }\r\n}\r\n.clean-slide:focus,\r\n.clean-slide:active {\r\n  color: #377D6A;\r\n  text-indent: 0;\r\n  background: #fff;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  \r\n  &::-webkit-input-placeholder {\r\n    color: #aaa;\r\n  }\r\n  + label {\r\n    color: #fff;\r\n    text-shadow: 0 1px 0 rgba(19,74,70,.4);\r\n    transform: translateX(-100%);\r\n    \r\n    &:after {\r\n      transform: translate(100%);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n.basic-slide {\r\n  display: inline-block;\r\n  width: 215px;\r\n  padding: 10px 0 10px 15px;\r\n  font-family: \"Open Sans\", sans;\r\n  font-weight: 400;\r\n  color: #377D6A;\r\n  background: #efefef;\r\n  border: 0;\r\n  border-radius: 3px;\r\n  outline: 0;\r\n  text-indent: 70px; // Arbitrary.\r\n  transition: all .3s ease-in-out;\r\n  \r\n  &::-webkit-input-placeholder {\r\n    color: #efefef;\r\n    text-indent: 0;\r\n    font-weight: 300;\r\n  }\r\n\r\n  + label {\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 8px 15px;\r\n    text-shadow: 0 1px 0 rgba(19,74,70,.4);\r\n    background: #7AB893;\r\n    transition: all .3s ease-in-out;\r\n    border-top-left-radius: 3px;\r\n    border-bottom-left-radius: 3px;\r\n    color:white;\r\n  }\r\n}\r\n.basic-slide:focus,\r\n.basic-slide:active {\r\n  color: #377D6A;\r\n  text-indent: 0;\r\n  background: #fff;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  \r\n  &::-webkit-input-placeholder {\r\n    color: #aaa;\r\n  }\r\n  + label {\r\n    transform: translateX(-100%);\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}